@page
@model FUNewsManagementWebRazorPage.Pages.SystemAccounts.IndexModel
@{
    ViewData["Title"] = "System Accounts";
}

<h1>System Accounts</h1>

<p>
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</p>

<form method="get" class="form-inline mb-3">
    <input type="text" name="Search" value="@Model.Search" placeholder="Search by name or email" class="form-control mr-2" />
    <button type="submit" class="btn btn-primary mr-3">Search</button>
    <a asp-page="Index" class="btn btn-secondary">Reset</a>
</form>

<table class="table table-bordered" id="accountsTable">
    <thead>
        <tr>
            <th>ID</th>
            <th><button type="button" onclick="sortTable(1)">Name ▲▼</button></th>
            <th><button type="button" onclick="sortTable(2)">Email ▲▼</button></th>
            <th>Role</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @foreach (var item in Model.Accounts)
        {
            <tr>
                <td>@item.AccountId</td>
                <td>@item.AccountName</td>
                <td>@item.AccountEmail</td>
                <td>@item.AccountRole</td>
                <td>
                    <a asp-page="Detail" asp-route-id="@item.AccountId">Details</a> |
                    <a asp-page="Edit" asp-route-id="@item.AccountId">Edit</a> |
                    <a asp-page="Delete" asp-route-id="@item.AccountId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<script src="~/js/pagingaccounts.js"></script>
<script>
    let sortDirections = {
        1: true, // true: ascending, false: descending for Name column
        2: true  // for Email column
    };

    function sortTable(colIndex) {
        const table = document.getElementById('accountsTable');
        const tbody = table.tBodies[0];
        const rows = Array.from(tbody.rows);
        const ascending = sortDirections[colIndex];

        rows.sort((a, b) => {
            let aText = a.cells[colIndex].innerText.toLowerCase();
            let bText = b.cells[colIndex].innerText.toLowerCase();

            if (aText < bText) return ascending ? -1 : 1;
            if (aText > bText) return ascending ? 1 : -1;
            return 0;
        });

        // Remove existing rows
        while (tbody.firstChild) {
            tbody.removeChild(tbody.firstChild);
        }

        // Append sorted rows
        rows.forEach(row => tbody.appendChild(row));

        // Toggle sort direction for next click
        sortDirections[colIndex] = !ascending;
    }
</script>
